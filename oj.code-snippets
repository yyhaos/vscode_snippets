{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
    "oj": {
        "prefix": "oj",
        "body": [
            "//Problem Web:",
            "#include<bits/stdc++.h>",
            "#include<ext/rope>",
            "using namespace std;",
            "#ifdef yyhao",
            "const std::string currentDateTime() {",
            "\ttime_t\t now = time(0);",
            "\tstruct tm  tstruct;",
            "\tchar\t   buf[80];",
            "\ttstruct = *localtime(&now);",
            "\t// Visit http://en.cppreference.com/w/cpp/chrono/c/strftime",
            "\t// for more information about date/time format",
            "\tstrftime(buf, sizeof(buf), \"%Y-%m-%d.%X\", &tstruct);",
            "",
            "\treturn buf;",
            "}",
            "#endif",
            "#define ll long long",
            "#define lowbit(x) (x&-x)",
            "#define rep(i,x,y) for(int i=x;i<=y;i++)",
            "#define crep(i,x,y) for(int i=x;i>=y;i--)",
            "#define gcd(x,y) __gcd(x,y)",
            "#define mem(x,y) memset(x,y,sizeof(x))",
            "#define vc vector",
            "//#define use_t 1",
            "const double PI=acos(-1.0);",
            "const double eps=1e-8;",
            "const ll INF = 100000000;",
            "const ll maxn=1000;",
            "const ll q=1e9+7;",
            "ll ksm(ll a,ll b)",
            "{",
            "\tll ans=1LL;",
            "\twhile(b>0)",
            "\t{",
            "\t\tif(b&1LL)",
            "\t\t\tans=ans*a%q;",
            "\t\ta=a*a%q;",
            "\t\tb/=2LL;",
            "\t}",
            "\treturn ans;",
            "}",
            "struct S {",
            "\tll a, b;",
            "\tbool operator<(const S& other) const {",
            "\t\tif(a == other.a) {",
            "\t\t\treturn b > other.b;// 注意这里使用 '>' 是为了实现最小堆，即 b 较小的在前",
            "\t\t}",
            "\t\treturn a > other.a;  // 注意这里使用 '>' 是为了实现最小堆，即 a 较小的在前",
            "\t}",
            "};",
            "priority_queue<S> pq;",
            "ll t,n,m,k;",
            "",
            "",
            "const ll N = ;",
            "ll c[N];",
            "int main ()",
            "{",
            "#ifdef yyhao",
            "\tfreopen(\"in.txt\",\"r\",stdin);",
            "\tfreopen(\"out.txt\",\"w\",stdout);",
            "\tcout<<\"Time:\"<<currentDateTime()<<endl;",
            "#endif",
            "",
            "#define use_t",
            "#ifdef use_t",
            "int ii=1;",
            "cin>>t;",
            "for(ii=1;ii<=t;ii++)",
            "{ ",
            "#endif // use_t",
            "\tcin>>n;",
            "\trep(i,1,n)",
            "\t{",
            "\t\tcin>>c[i];",
            "\t}",
            "#ifdef use_t",
            "}",
            "#endif // use_t",
            "\treturn 0;",
            "}"
        ]
    }
}